 # # # # # # # # # # # # # # # # # # # # # # # #
# REPLACE THE FOLLOWING VARIABLES AND ADJUST 
# - ENVIRONMENT_REFERENCE
# - CLIENT_ID_SECRET_REFERENCE
# - SUBSCRIPTION_ID_SECRET_REFERENCE
# - TENANT_ID_SECRET_REFERENCE
# - RESOURCE_GROUP_REFERENCE
# - STORAGE_ACCOUNT_REFERENCE
# - CONTAINER_NAME_REFERENCE
#
# # # # # # # # # # # # # # # # # # # # # # # # #

name: Deploy Terraform

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      deployPrd:
        description: 'Deploy PRD Infrastructure?'
        required: true
        type: boolean
        default: false
      deployAppCode:
        description: 'Deploy PRD application code?'
        required: true
        type: boolean
        default: false


permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  build_job:
    runs-on: ubuntu-latest
    environment: dev
    name: Deploy DEV infrastructure
    defaults:
      run:
        working-directory: ./Terraform
    
    env:
      ARM_CLIENT_ID: "${{ secrets.ASGERTHYREGODDK_DEV_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.ASGERTHYREGODDK_DEV_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.ASGERTHYREGODDK_DEV_TENANT_ID }}"
      ARM_USE_AZUREAD: true

    steps:
    - uses: actions/checkout@v3

    - name: Install Terraform
      run: bash "${{ github.workspace }}/.github/scripts/install_terraform.sh" 

    - name: Terraform Fmt
      run: terraform fmt -check

    - name: Terraform Init
      run: |
        terraform init \
        -backend-config=resource_group_name="${{ secrets.ASGERTHYREGODDK_DEV_TFSTATE_RESOURCE_GROUP_NAME }}" \
        -backend-config=storage_account_name="${{ secrets.ASGERTHYREGODDK_DEV_TFSTATE_STORAGE_ACCOUNT_NAME }}" \
        -backend-config=container_name="${{ secrets.ASGERTHYREGODDK_DEV_TFSTATE_STORAGE_CONTAINER_NAME }}" \
        -backend-config=key="asgerthyregoddk.dev"
        
    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false -var-file="envs/dev/vars.dev.tfvars" -out=tfplan #UPDATE VARS file

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan